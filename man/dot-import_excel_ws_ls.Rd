% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_excel_ws_ls.R
\name{.import_excel_ws_ls}
\alias{.import_excel_ws_ls}
\title{.import_excel_ws_ls}
\usage{
.import_excel_ws_ls(excel_ws_ls, skip = 0, col_names = TRUE,
  range = NULL)
}
\arguments{
\item{excel_ws_ls}{Required. A tibble object created (preferablly) using
\code{\link[dstCSDR:dot-create_excel_ws_ls]{.create_excel_ws_ls}} which has
a column of file paths and worksheet titles that will be imported.}

\item{skip}{Optional. Taken from and passed to
\code{\link[readxl:read_excel]{read_excel}}: Minimum number of rows to skip
before reading anything, be it column names or data. Leading empty rows are
automatically skipped, so this is a lower bound. \code{0} by default.}

\item{col_names}{Optional. Taken from and passed to
\code{\link[readxl:read_excel]{read_excel}}: \code{TRUE} to use the first
row as column names, \code{FALSE} to get default names, or a character
vector giving a name for each column. \code{TRUE} by default.}

\item{range}{Optional. Taken from and passed to
\code{\link[readxl:read_excel]{read_excel}}:
A cell range to read from, as described in
\code{\link[readxl:cell-specification]{cell specification}}. Includes
typical Excel ranges like "B3:D87", possibly including the sheet name like
"Budget!B2:G14", and more. Interpreted strictly, even if the range forces
the inclusion of leading or trailing empty rows or columns.}
}
\value{
Returns a tibble with each worksheet listed in the \code{excel_ws_ls}
object combined into one tibble. A column with \code{source_file_name} and
\code{source_file_worksheet} are also added to keep track of where the data
came from.
}
\description{
Import Worksheets From a \code{excel_ws_ls} Object
}
\details{
Imports all worksheets listed in a \code{excel_ws_ls} object to a single
tibble. Each column in the source worksheets should be of identical names and
types.
}
\seealso{
\code{\link[=.create_excel_ws_ls]{.create_excel_ws_ls()}} to create a tibble of files and worksheet
names.

\code{\link[=.grab_cell]{.grab_cell()}} pulls the value out of an individual Excel cell and
reurns it to R.

Other dstCSDR Import Excel Data Functions: \code{\link{.create_excel_ws_ls}},
  \code{\link{.grab_cell}}
}
\author{
Daniel Germony \email{daniel.r.germony.civ@mail.mil}
}
\concept{dstCSDR Import Excel Data Functions}
